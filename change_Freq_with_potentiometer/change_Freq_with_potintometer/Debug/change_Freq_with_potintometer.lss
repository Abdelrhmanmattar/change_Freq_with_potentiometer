
change_Freq_with_potintometer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000cb6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  00000cb6  00000d4a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800078  00800078  00000d62  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d62  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000dc0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  00000dfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000156b  00000000  00000000  00000f3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a13  00000000  00000000  000024a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c52  00000000  00000000  00002eba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000268  00000000  00000000  00003b0c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005fa  00000000  00000000  00003d74  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e31  00000000  00000000  0000436e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  0000519f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
   8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
   c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  10:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  14:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  18:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  1c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  20:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  24:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  28:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  2c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  30:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  34:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  38:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  3c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  40:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  44:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  48:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  4c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  50:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  54:	bd 00       	.word	0x00bd	; ????
  56:	d6 00       	.word	0x00d6	; ????
  58:	ef 00       	.word	0x00ef	; ????
  5a:	08 01       	movw	r0, r16
  5c:	21 01       	movw	r4, r2
  5e:	21 01       	movw	r4, r2
  60:	21 01       	movw	r4, r2
  62:	21 01       	movw	r4, r2
  64:	21 01       	movw	r4, r2
  66:	21 01       	movw	r4, r2
  68:	21 01       	movw	r4, r2
  6a:	21 01       	movw	r4, r2
  6c:	21 01       	movw	r4, r2
  6e:	21 01       	movw	r4, r2
  70:	21 01       	movw	r4, r2
  72:	21 01       	movw	r4, r2
  74:	21 01       	movw	r4, r2
  76:	21 01       	movw	r4, r2
  78:	21 01       	movw	r4, r2
  7a:	21 01       	movw	r4, r2
  7c:	21 01       	movw	r4, r2
  7e:	21 01       	movw	r4, r2
  80:	21 01       	movw	r4, r2
  82:	21 01       	movw	r4, r2
  84:	21 01       	movw	r4, r2
  86:	21 01       	movw	r4, r2
  88:	21 01       	movw	r4, r2
  8a:	21 01       	movw	r4, r2
  8c:	21 01       	movw	r4, r2
  8e:	21 01       	movw	r4, r2
  90:	21 01       	movw	r4, r2
  92:	21 01       	movw	r4, r2
  94:	bd 00       	.word	0x00bd	; ????
  96:	d6 00       	.word	0x00d6	; ????
  98:	ef 00       	.word	0x00ef	; ????
  9a:	08 01       	movw	r0, r16
  9c:	36 01       	movw	r6, r12
  9e:	4f 01       	movw	r8, r30
  a0:	68 01       	movw	r12, r16
  a2:	81 01       	movw	r16, r2
  a4:	9a 01       	movw	r18, r20
  a6:	9a 01       	movw	r18, r20
  a8:	9a 01       	movw	r18, r20
  aa:	9a 01       	movw	r18, r20
  ac:	9a 01       	movw	r18, r20
  ae:	9a 01       	movw	r18, r20
  b0:	9a 01       	movw	r18, r20
  b2:	9a 01       	movw	r18, r20
  b4:	9a 01       	movw	r18, r20
  b6:	9a 01       	movw	r18, r20
  b8:	9a 01       	movw	r18, r20
  ba:	9a 01       	movw	r18, r20
  bc:	9a 01       	movw	r18, r20
  be:	9a 01       	movw	r18, r20
  c0:	9a 01       	movw	r18, r20
  c2:	9a 01       	movw	r18, r20
  c4:	9a 01       	movw	r18, r20
  c6:	9a 01       	movw	r18, r20
  c8:	9a 01       	movw	r18, r20
  ca:	9a 01       	movw	r18, r20
  cc:	9a 01       	movw	r18, r20
  ce:	9a 01       	movw	r18, r20
  d0:	9a 01       	movw	r18, r20
  d2:	9a 01       	movw	r18, r20
  d4:	9a 01       	movw	r18, r20
  d6:	9a 01       	movw	r18, r20
  d8:	9a 01       	movw	r18, r20
  da:	9a 01       	movw	r18, r20
  dc:	36 01       	movw	r6, r12
  de:	4f 01       	movw	r8, r30
  e0:	68 01       	movw	r12, r16
  e2:	81 01       	movw	r16, r2

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf e5       	ldi	r28, 0x5F	; 95
  ea:	d4 e0       	ldi	r29, 0x04	; 4
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61

000000f0 <__do_copy_data>:
  f0:	10 e0       	ldi	r17, 0x00	; 0
  f2:	a0 e6       	ldi	r26, 0x60	; 96
  f4:	b0 e0       	ldi	r27, 0x00	; 0
  f6:	e6 eb       	ldi	r30, 0xB6	; 182
  f8:	fc e0       	ldi	r31, 0x0C	; 12
  fa:	02 c0       	rjmp	.+4      	; 0x100 <__do_copy_data+0x10>
  fc:	05 90       	lpm	r0, Z+
  fe:	0d 92       	st	X+, r0
 100:	a8 37       	cpi	r26, 0x78	; 120
 102:	b1 07       	cpc	r27, r17
 104:	d9 f7       	brne	.-10     	; 0xfc <__do_copy_data+0xc>

00000106 <__do_clear_bss>:
 106:	20 e0       	ldi	r18, 0x00	; 0
 108:	a8 e7       	ldi	r26, 0x78	; 120
 10a:	b0 e0       	ldi	r27, 0x00	; 0
 10c:	01 c0       	rjmp	.+2      	; 0x110 <.do_clear_bss_start>

0000010e <.do_clear_bss_loop>:
 10e:	1d 92       	st	X+, r1

00000110 <.do_clear_bss_start>:
 110:	a0 38       	cpi	r26, 0x80	; 128
 112:	b2 07       	cpc	r27, r18
 114:	e1 f7       	brne	.-8      	; 0x10e <.do_clear_bss_loop>
 116:	0e 94 a3 02 	call	0x546	; 0x546 <main>
 11a:	0c 94 59 06 	jmp	0xcb2	; 0xcb2 <_exit>

0000011e <__bad_interrupt>:
 11e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000122 <ADC_vinit>:
#include "std_macros.h"
#include "ADC.h"
void ADC_vinit(int8_t mux)
{
	//configure VREF
	SET_BIT(ADMUX,REFS0);
 122:	97 b1       	in	r25, 0x07	; 7
 124:	90 64       	ori	r25, 0x40	; 64
 126:	97 b9       	out	0x07, r25	; 7
	//SET_BIT(ADMUX,REFS1);
	//enable ADC
	SET_BIT(ADCSRA,ADEN);
 128:	96 b1       	in	r25, 0x06	; 6
 12a:	90 68       	ori	r25, 0x80	; 128
 12c:	96 b9       	out	0x06, r25	; 6
	mux=mux | 0b11100000;
 12e:	80 6e       	ori	r24, 0xE0	; 224
	//set mux mode
	ADMUX |= 0b00011111;
 130:	97 b1       	in	r25, 0x07	; 7
 132:	9f 61       	ori	r25, 0x1F	; 31
 134:	97 b9       	out	0x07, r25	; 7
	ADMUX =ADMUX&mux;
 136:	97 b1       	in	r25, 0x07	; 7
 138:	89 23       	and	r24, r25
 13a:	87 b9       	out	0x07, r24	; 7
	
	// SET Prescaler
	SET_BIT(ADCSRA,ADPS1);
 13c:	86 b1       	in	r24, 0x06	; 6
 13e:	82 60       	ori	r24, 0x02	; 2
 140:	86 b9       	out	0x06, r24	; 6
	SET_BIT(ADCSRA,ADPS2);
 142:	86 b1       	in	r24, 0x06	; 6
 144:	84 60       	ori	r24, 0x04	; 4
 146:	86 b9       	out	0x06, r24	; 6
 148:	08 95       	ret

0000014a <ADC_u16Read>:


unsigned short ADC_u16Read(void)
{
	unsigned short read_val;
	SET_BIT(ADCSRA,ADSC);
 14a:	86 b1       	in	r24, 0x06	; 6
 14c:	80 64       	ori	r24, 0x40	; 64
 14e:	86 b9       	out	0x06, r24	; 6
	while(READ_BIT(ADCSRA,ADSC));
 150:	36 99       	sbic	0x06, 6	; 6
 152:	fe cf       	rjmp	.-4      	; 0x150 <ADC_u16Read+0x6>
	read_val=(ADCL);
 154:	24 b1       	in	r18, 0x04	; 4
	read_val|=(ADCH<<8);
 156:	85 b1       	in	r24, 0x05	; 5
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	98 2f       	mov	r25, r24
 15c:	88 27       	eor	r24, r24
	return read_val ;
 15e:	82 2b       	or	r24, r18
 160:	08 95       	ret

00000162 <dio_setpin>:
		case 'C':
		PORTC&=0xf0;
		PORTC|=value;
		case 'D':
		PORTD&=0xf0;
		PORTD|=value;
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	fc 01       	movw	r30, r24
 166:	e1 54       	subi	r30, 0x41	; 65
 168:	f1 09       	sbc	r31, r1
 16a:	e4 32       	cpi	r30, 0x24	; 36
 16c:	f1 05       	cpc	r31, r1
 16e:	08 f0       	brcs	.+2      	; 0x172 <dio_setpin+0x10>
 170:	68 c0       	rjmp	.+208    	; 0x242 <__EEPROM_REGION_LENGTH__+0x42>
 172:	e6 5d       	subi	r30, 0xD6	; 214
 174:	ff 4f       	sbci	r31, 0xFF	; 255
 176:	0c 94 53 03 	jmp	0x6a6	; 0x6a6 <__tablejump2__>
 17a:	44 23       	and	r20, r20
 17c:	59 f0       	breq	.+22     	; 0x194 <dio_setpin+0x32>
 17e:	2a b3       	in	r18, 0x1a	; 26
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <dio_setpin+0x28>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <dio_setpin+0x24>
 18e:	82 2b       	or	r24, r18
 190:	8a bb       	out	0x1a, r24	; 26
 192:	08 95       	ret
 194:	2a b3       	in	r18, 0x1a	; 26
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <dio_setpin+0x3e>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <dio_setpin+0x3a>
 1a4:	80 95       	com	r24
 1a6:	82 23       	and	r24, r18
 1a8:	8a bb       	out	0x1a, r24	; 26
 1aa:	08 95       	ret
 1ac:	44 23       	and	r20, r20
 1ae:	59 f0       	breq	.+22     	; 0x1c6 <dio_setpin+0x64>
 1b0:	27 b3       	in	r18, 0x17	; 23
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <dio_setpin+0x5a>
 1b8:	88 0f       	add	r24, r24
 1ba:	99 1f       	adc	r25, r25
 1bc:	6a 95       	dec	r22
 1be:	e2 f7       	brpl	.-8      	; 0x1b8 <dio_setpin+0x56>
 1c0:	82 2b       	or	r24, r18
 1c2:	87 bb       	out	0x17, r24	; 23
 1c4:	08 95       	ret
 1c6:	27 b3       	in	r18, 0x17	; 23
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <dio_setpin+0x70>
 1ce:	88 0f       	add	r24, r24
 1d0:	99 1f       	adc	r25, r25
 1d2:	6a 95       	dec	r22
 1d4:	e2 f7       	brpl	.-8      	; 0x1ce <dio_setpin+0x6c>
 1d6:	80 95       	com	r24
 1d8:	82 23       	and	r24, r18
 1da:	87 bb       	out	0x17, r24	; 23
 1dc:	08 95       	ret
 1de:	44 23       	and	r20, r20
 1e0:	59 f0       	breq	.+22     	; 0x1f8 <dio_setpin+0x96>
 1e2:	24 b3       	in	r18, 0x14	; 20
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <dio_setpin+0x8c>
 1ea:	88 0f       	add	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	6a 95       	dec	r22
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <dio_setpin+0x88>
 1f2:	82 2b       	or	r24, r18
 1f4:	84 bb       	out	0x14, r24	; 20
 1f6:	08 95       	ret
 1f8:	24 b3       	in	r18, 0x14	; 20
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
 200:	88 0f       	add	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	6a 95       	dec	r22
 206:	e2 f7       	brpl	.-8      	; 0x200 <__EEPROM_REGION_LENGTH__>
 208:	80 95       	com	r24
 20a:	82 23       	and	r24, r18
 20c:	84 bb       	out	0x14, r24	; 20
 20e:	08 95       	ret
 210:	44 23       	and	r20, r20
 212:	59 f0       	breq	.+22     	; 0x22a <__EEPROM_REGION_LENGTH__+0x2a>
 214:	21 b3       	in	r18, 0x11	; 17
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	02 c0       	rjmp	.+4      	; 0x220 <__EEPROM_REGION_LENGTH__+0x20>
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	6a 95       	dec	r22
 222:	e2 f7       	brpl	.-8      	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
 224:	82 2b       	or	r24, r18
 226:	81 bb       	out	0x11, r24	; 17
 228:	08 95       	ret
 22a:	21 b3       	in	r18, 0x11	; 17
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <__EEPROM_REGION_LENGTH__+0x36>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	6a 95       	dec	r22
 238:	e2 f7       	brpl	.-8      	; 0x232 <__EEPROM_REGION_LENGTH__+0x32>
 23a:	80 95       	com	r24
 23c:	82 23       	and	r24, r18
 23e:	81 bb       	out	0x11, r24	; 17
 240:	08 95       	ret
 242:	80 e6       	ldi	r24, 0x60	; 96
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	9f 93       	push	r25
 248:	8f 93       	push	r24
 24a:	0e 94 59 03 	call	0x6b2	; 0x6b2 <printf>
 24e:	0f 90       	pop	r0
 250:	0f 90       	pop	r0
 252:	08 95       	ret

00000254 <dio_writepin>:
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	fc 01       	movw	r30, r24
 258:	e1 54       	subi	r30, 0x41	; 65
 25a:	f1 09       	sbc	r31, r1
 25c:	e4 32       	cpi	r30, 0x24	; 36
 25e:	f1 05       	cpc	r31, r1
 260:	08 f0       	brcs	.+2      	; 0x264 <dio_writepin+0x10>
 262:	68 c0       	rjmp	.+208    	; 0x334 <dio_writepin+0xe0>
 264:	e2 5b       	subi	r30, 0xB2	; 178
 266:	ff 4f       	sbci	r31, 0xFF	; 255
 268:	0c 94 53 03 	jmp	0x6a6	; 0x6a6 <__tablejump2__>
 26c:	44 23       	and	r20, r20
 26e:	59 f0       	breq	.+22     	; 0x286 <dio_writepin+0x32>
 270:	2b b3       	in	r18, 0x1b	; 27
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	02 c0       	rjmp	.+4      	; 0x27c <dio_writepin+0x28>
 278:	88 0f       	add	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	6a 95       	dec	r22
 27e:	e2 f7       	brpl	.-8      	; 0x278 <dio_writepin+0x24>
 280:	82 2b       	or	r24, r18
 282:	8b bb       	out	0x1b, r24	; 27
 284:	08 95       	ret
 286:	2b b3       	in	r18, 0x1b	; 27
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	02 c0       	rjmp	.+4      	; 0x292 <dio_writepin+0x3e>
 28e:	88 0f       	add	r24, r24
 290:	99 1f       	adc	r25, r25
 292:	6a 95       	dec	r22
 294:	e2 f7       	brpl	.-8      	; 0x28e <dio_writepin+0x3a>
 296:	80 95       	com	r24
 298:	82 23       	and	r24, r18
 29a:	8b bb       	out	0x1b, r24	; 27
 29c:	08 95       	ret
 29e:	44 23       	and	r20, r20
 2a0:	59 f0       	breq	.+22     	; 0x2b8 <dio_writepin+0x64>
 2a2:	28 b3       	in	r18, 0x18	; 24
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <dio_writepin+0x5a>
 2aa:	88 0f       	add	r24, r24
 2ac:	99 1f       	adc	r25, r25
 2ae:	6a 95       	dec	r22
 2b0:	e2 f7       	brpl	.-8      	; 0x2aa <dio_writepin+0x56>
 2b2:	82 2b       	or	r24, r18
 2b4:	88 bb       	out	0x18, r24	; 24
 2b6:	08 95       	ret
 2b8:	28 b3       	in	r18, 0x18	; 24
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	02 c0       	rjmp	.+4      	; 0x2c4 <dio_writepin+0x70>
 2c0:	88 0f       	add	r24, r24
 2c2:	99 1f       	adc	r25, r25
 2c4:	6a 95       	dec	r22
 2c6:	e2 f7       	brpl	.-8      	; 0x2c0 <dio_writepin+0x6c>
 2c8:	80 95       	com	r24
 2ca:	82 23       	and	r24, r18
 2cc:	88 bb       	out	0x18, r24	; 24
 2ce:	08 95       	ret
 2d0:	44 23       	and	r20, r20
 2d2:	59 f0       	breq	.+22     	; 0x2ea <dio_writepin+0x96>
 2d4:	25 b3       	in	r18, 0x15	; 21
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	02 c0       	rjmp	.+4      	; 0x2e0 <dio_writepin+0x8c>
 2dc:	88 0f       	add	r24, r24
 2de:	99 1f       	adc	r25, r25
 2e0:	6a 95       	dec	r22
 2e2:	e2 f7       	brpl	.-8      	; 0x2dc <dio_writepin+0x88>
 2e4:	82 2b       	or	r24, r18
 2e6:	85 bb       	out	0x15, r24	; 21
 2e8:	08 95       	ret
 2ea:	25 b3       	in	r18, 0x15	; 21
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <dio_writepin+0xa2>
 2f2:	88 0f       	add	r24, r24
 2f4:	99 1f       	adc	r25, r25
 2f6:	6a 95       	dec	r22
 2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <dio_writepin+0x9e>
 2fa:	80 95       	com	r24
 2fc:	82 23       	and	r24, r18
 2fe:	85 bb       	out	0x15, r24	; 21
 300:	08 95       	ret
 302:	44 23       	and	r20, r20
 304:	59 f0       	breq	.+22     	; 0x31c <dio_writepin+0xc8>
 306:	22 b3       	in	r18, 0x12	; 18
 308:	81 e0       	ldi	r24, 0x01	; 1
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	02 c0       	rjmp	.+4      	; 0x312 <dio_writepin+0xbe>
 30e:	88 0f       	add	r24, r24
 310:	99 1f       	adc	r25, r25
 312:	6a 95       	dec	r22
 314:	e2 f7       	brpl	.-8      	; 0x30e <dio_writepin+0xba>
 316:	82 2b       	or	r24, r18
 318:	82 bb       	out	0x12, r24	; 18
 31a:	08 95       	ret
 31c:	22 b3       	in	r18, 0x12	; 18
 31e:	81 e0       	ldi	r24, 0x01	; 1
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	02 c0       	rjmp	.+4      	; 0x328 <dio_writepin+0xd4>
 324:	88 0f       	add	r24, r24
 326:	99 1f       	adc	r25, r25
 328:	6a 95       	dec	r22
 32a:	e2 f7       	brpl	.-8      	; 0x324 <dio_writepin+0xd0>
 32c:	80 95       	com	r24
 32e:	82 23       	and	r24, r18
 330:	82 bb       	out	0x12, r24	; 18
 332:	08 95       	ret
 334:	80 e6       	ldi	r24, 0x60	; 96
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	9f 93       	push	r25
 33a:	8f 93       	push	r24
 33c:	0e 94 59 03 	call	0x6b2	; 0x6b2 <printf>
 340:	0f 90       	pop	r0
 342:	0f 90       	pop	r0
 344:	08 95       	ret

00000346 <write_high_nibble>:
	}
}

void write_high_nibble(unsigned char portname,unsigned char value)
{
	value<<=4;
 346:	62 95       	swap	r22
 348:	60 7f       	andi	r22, 0xF0	; 240
	switch(portname)
 34a:	82 34       	cpi	r24, 0x42	; 66
 34c:	79 f0       	breq	.+30     	; 0x36c <write_high_nibble+0x26>
 34e:	18 f4       	brcc	.+6      	; 0x356 <write_high_nibble+0x10>
 350:	81 34       	cpi	r24, 0x41	; 65
 352:	31 f0       	breq	.+12     	; 0x360 <write_high_nibble+0x1a>
 354:	08 95       	ret
 356:	83 34       	cpi	r24, 0x43	; 67
 358:	79 f0       	breq	.+30     	; 0x378 <write_high_nibble+0x32>
 35a:	84 34       	cpi	r24, 0x44	; 68
 35c:	99 f0       	breq	.+38     	; 0x384 <write_high_nibble+0x3e>
 35e:	08 95       	ret
	{
		case 'A':
		PORTA&=0x0f;
 360:	8b b3       	in	r24, 0x1b	; 27
 362:	8f 70       	andi	r24, 0x0F	; 15
 364:	8b bb       	out	0x1b, r24	; 27
		PORTA|=value;
 366:	8b b3       	in	r24, 0x1b	; 27
 368:	86 2b       	or	r24, r22
 36a:	8b bb       	out	0x1b, r24	; 27
		case 'B':
		PORTB&=0x0f;
 36c:	88 b3       	in	r24, 0x18	; 24
 36e:	8f 70       	andi	r24, 0x0F	; 15
 370:	88 bb       	out	0x18, r24	; 24
		PORTB|=value;
 372:	88 b3       	in	r24, 0x18	; 24
 374:	86 2b       	or	r24, r22
 376:	88 bb       	out	0x18, r24	; 24
		case 'C':
		PORTC&=0x0f;
 378:	85 b3       	in	r24, 0x15	; 21
 37a:	8f 70       	andi	r24, 0x0F	; 15
 37c:	85 bb       	out	0x15, r24	; 21
		PORTC|=value;
 37e:	85 b3       	in	r24, 0x15	; 21
 380:	86 2b       	or	r24, r22
 382:	85 bb       	out	0x15, r24	; 21
		case 'D':
		PORTD&=0x0f;
 384:	82 b3       	in	r24, 0x12	; 18
 386:	8f 70       	andi	r24, 0x0F	; 15
 388:	82 bb       	out	0x12, r24	; 18
		PORTD|=value;
 38a:	82 b3       	in	r24, 0x12	; 18
 38c:	68 2b       	or	r22, r24
 38e:	62 bb       	out	0x12, r22	; 18
 390:	08 95       	ret

00000392 <enable>:
	_delay_ms(2);
	#endif
}
void enable()
{
	dio_writepin('B',0,1);
 392:	41 e0       	ldi	r20, 0x01	; 1
 394:	60 e0       	ldi	r22, 0x00	; 0
 396:	82 e4       	ldi	r24, 0x42	; 66
 398:	0e 94 2a 01 	call	0x254	; 0x254 <dio_writepin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 39c:	8f e9       	ldi	r24, 0x9F	; 159
 39e:	9f e0       	ldi	r25, 0x0F	; 15
 3a0:	01 97       	sbiw	r24, 0x01	; 1
 3a2:	f1 f7       	brne	.-4      	; 0x3a0 <enable+0xe>
 3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <enable+0x14>
 3a6:	00 00       	nop
	_delay_ms(2);
	dio_writepin('B',0,0);
 3a8:	40 e0       	ldi	r20, 0x00	; 0
 3aa:	60 e0       	ldi	r22, 0x00	; 0
 3ac:	82 e4       	ldi	r24, 0x42	; 66
 3ae:	0e 94 2a 01 	call	0x254	; 0x254 <dio_writepin>
 3b2:	8f e9       	ldi	r24, 0x9F	; 159
 3b4:	9f e0       	ldi	r25, 0x0F	; 15
 3b6:	01 97       	sbiw	r24, 0x01	; 1
 3b8:	f1 f7       	brne	.-4      	; 0x3b6 <enable+0x24>
 3ba:	00 c0       	rjmp	.+0      	; 0x3bc <enable+0x2a>
 3bc:	00 00       	nop
 3be:	08 95       	ret

000003c0 <lcd_cmd>:
	_delay_ms(2);
}

void lcd_cmd(char cmd)
{
 3c0:	cf 93       	push	r28
 3c2:	c8 2f       	mov	r28, r24
	{
		_delay_ms(10);
	}
	else _delay_ms(2);
	#elif defined bitmode4
	write_high_nibble('A',cmd>>4);
 3c4:	68 2f       	mov	r22, r24
 3c6:	62 95       	swap	r22
 3c8:	6f 70       	andi	r22, 0x0F	; 15
 3ca:	81 e4       	ldi	r24, 0x41	; 65
 3cc:	0e 94 a3 01 	call	0x346	; 0x346 <write_high_nibble>
	dio_writepin('B',1,0);
 3d0:	40 e0       	ldi	r20, 0x00	; 0
 3d2:	61 e0       	ldi	r22, 0x01	; 1
 3d4:	82 e4       	ldi	r24, 0x42	; 66
 3d6:	0e 94 2a 01 	call	0x254	; 0x254 <dio_writepin>
	enable();
 3da:	0e 94 c9 01 	call	0x392	; 0x392 <enable>
	write_high_nibble('A',cmd);
 3de:	6c 2f       	mov	r22, r28
 3e0:	81 e4       	ldi	r24, 0x41	; 65
 3e2:	0e 94 a3 01 	call	0x346	; 0x346 <write_high_nibble>
	dio_writepin('B',1,0);
 3e6:	40 e0       	ldi	r20, 0x00	; 0
 3e8:	61 e0       	ldi	r22, 0x01	; 1
 3ea:	82 e4       	ldi	r24, 0x42	; 66
 3ec:	0e 94 2a 01 	call	0x254	; 0x254 <dio_writepin>
	enable();
 3f0:	0e 94 c9 01 	call	0x392	; 0x392 <enable>
 3f4:	8f ec       	ldi	r24, 0xCF	; 207
 3f6:	97 e0       	ldi	r25, 0x07	; 7
 3f8:	01 97       	sbiw	r24, 0x01	; 1
 3fa:	f1 f7       	brne	.-4      	; 0x3f8 <lcd_cmd+0x38>
 3fc:	00 c0       	rjmp	.+0      	; 0x3fe <lcd_cmd+0x3e>
 3fe:	00 00       	nop
	_delay_ms(1);
	#endif
}
 400:	cf 91       	pop	r28
 402:	08 95       	ret

00000404 <lcd_init>:
	lcd_cmd(clearscreen);
	_delay_ms(1);
	lcd_cmd(ENTRY_MODE);
	_delay_ms(1);
	#elif defined bitmode4
	dio_setpin('A',4,1);
 404:	41 e0       	ldi	r20, 0x01	; 1
 406:	64 e0       	ldi	r22, 0x04	; 4
 408:	81 e4       	ldi	r24, 0x41	; 65
 40a:	0e 94 b1 00 	call	0x162	; 0x162 <dio_setpin>
	dio_setpin('A',5,1);
 40e:	41 e0       	ldi	r20, 0x01	; 1
 410:	65 e0       	ldi	r22, 0x05	; 5
 412:	81 e4       	ldi	r24, 0x41	; 65
 414:	0e 94 b1 00 	call	0x162	; 0x162 <dio_setpin>
	dio_setpin('A',6,1);
 418:	41 e0       	ldi	r20, 0x01	; 1
 41a:	66 e0       	ldi	r22, 0x06	; 6
 41c:	81 e4       	ldi	r24, 0x41	; 65
 41e:	0e 94 b1 00 	call	0x162	; 0x162 <dio_setpin>
	dio_setpin('A',7,1);
 422:	41 e0       	ldi	r20, 0x01	; 1
 424:	67 e0       	ldi	r22, 0x07	; 7
 426:	81 e4       	ldi	r24, 0x41	; 65
 428:	0e 94 b1 00 	call	0x162	; 0x162 <dio_setpin>
	dio_setpin('B',0,1);
 42c:	41 e0       	ldi	r20, 0x01	; 1
 42e:	60 e0       	ldi	r22, 0x00	; 0
 430:	82 e4       	ldi	r24, 0x42	; 66
 432:	0e 94 b1 00 	call	0x162	; 0x162 <dio_setpin>
	dio_setpin('B',1,1);
 436:	41 e0       	ldi	r20, 0x01	; 1
 438:	61 e0       	ldi	r22, 0x01	; 1
 43a:	82 e4       	ldi	r24, 0x42	; 66
 43c:	0e 94 b1 00 	call	0x162	; 0x162 <dio_setpin>
	dio_writepin('B',1,0);
 440:	40 e0       	ldi	r20, 0x00	; 0
 442:	61 e0       	ldi	r22, 0x01	; 1
 444:	82 e4       	ldi	r24, 0x42	; 66
 446:	0e 94 2a 01 	call	0x254	; 0x254 <dio_writepin>
	lcd_cmd(returnhome);
 44a:	82 e0       	ldi	r24, 0x02	; 2
 44c:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <lcd_cmd>
 450:	8f e9       	ldi	r24, 0x9F	; 159
 452:	9f e0       	ldi	r25, 0x0F	; 15
 454:	01 97       	sbiw	r24, 0x01	; 1
 456:	f1 f7       	brne	.-4      	; 0x454 <lcd_init+0x50>
 458:	00 c0       	rjmp	.+0      	; 0x45a <lcd_init+0x56>
 45a:	00 00       	nop
	_delay_ms(2);
	lcd_cmd(FOUR_BITS);
 45c:	88 e2       	ldi	r24, 0x28	; 40
 45e:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <lcd_cmd>
 462:	8f e9       	ldi	r24, 0x9F	; 159
 464:	9f e0       	ldi	r25, 0x0F	; 15
 466:	01 97       	sbiw	r24, 0x01	; 1
 468:	f1 f7       	brne	.-4      	; 0x466 <__stack+0x7>
 46a:	00 c0       	rjmp	.+0      	; 0x46c <__stack+0xd>
 46c:	00 00       	nop
	_delay_ms(2);
	lcd_cmd(CURSOR_ON_DISPLAN_ON);
 46e:	8e e0       	ldi	r24, 0x0E	; 14
 470:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <lcd_cmd>
 474:	8f e9       	ldi	r24, 0x9F	; 159
 476:	9f e0       	ldi	r25, 0x0F	; 15
 478:	01 97       	sbiw	r24, 0x01	; 1
 47a:	f1 f7       	brne	.-4      	; 0x478 <__stack+0x19>
 47c:	00 c0       	rjmp	.+0      	; 0x47e <__stack+0x1f>
 47e:	00 00       	nop
	_delay_ms(2);
	lcd_cmd(clearscreen);
 480:	81 e0       	ldi	r24, 0x01	; 1
 482:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <lcd_cmd>
 486:	8f e9       	ldi	r24, 0x9F	; 159
 488:	9f e0       	ldi	r25, 0x0F	; 15
 48a:	01 97       	sbiw	r24, 0x01	; 1
 48c:	f1 f7       	brne	.-4      	; 0x48a <__stack+0x2b>
 48e:	00 c0       	rjmp	.+0      	; 0x490 <__stack+0x31>
 490:	00 00       	nop
	_delay_ms(2);
	lcd_cmd(ENTRY_MODE);
 492:	86 e0       	ldi	r24, 0x06	; 6
 494:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <lcd_cmd>
 498:	8f e9       	ldi	r24, 0x9F	; 159
 49a:	9f e0       	ldi	r25, 0x0F	; 15
 49c:	01 97       	sbiw	r24, 0x01	; 1
 49e:	f1 f7       	brne	.-4      	; 0x49c <__stack+0x3d>
 4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <__stack+0x43>
 4a2:	00 00       	nop
 4a4:	08 95       	ret

000004a6 <movecurse>:
}
void movecurse(char row , char colum)
{
	
	char data ;
	if(row>2||row<1||colum>16||colum<1)
 4a6:	9f ef       	ldi	r25, 0xFF	; 255
 4a8:	98 0f       	add	r25, r24
 4aa:	92 30       	cpi	r25, 0x02	; 2
 4ac:	70 f4       	brcc	.+28     	; 0x4ca <movecurse+0x24>
 4ae:	61 31       	cpi	r22, 0x11	; 17
 4b0:	70 f4       	brcc	.+28     	; 0x4ce <movecurse+0x28>
 4b2:	66 23       	and	r22, r22
 4b4:	71 f0       	breq	.+28     	; 0x4d2 <movecurse+0x2c>
	{
		data=0x80;
	}
	else if (row ==1)
 4b6:	81 30       	cpi	r24, 0x01	; 1
 4b8:	19 f4       	brne	.+6      	; 0x4c0 <movecurse+0x1a>
	{
		data=0x80+colum-1;
 4ba:	2f e7       	ldi	r18, 0x7F	; 127
 4bc:	26 0f       	add	r18, r22
 4be:	0a c0       	rjmp	.+20     	; 0x4d4 <movecurse+0x2e>
	}
	else if (row==2)
 4c0:	82 30       	cpi	r24, 0x02	; 2
 4c2:	41 f4       	brne	.+16     	; 0x4d4 <movecurse+0x2e>
	{
		data=0xc0+colum-1;
 4c4:	2f eb       	ldi	r18, 0xBF	; 191
 4c6:	26 0f       	add	r18, r22
 4c8:	05 c0       	rjmp	.+10     	; 0x4d4 <movecurse+0x2e>
{
	
	char data ;
	if(row>2||row<1||colum>16||colum<1)
	{
		data=0x80;
 4ca:	20 e8       	ldi	r18, 0x80	; 128
 4cc:	03 c0       	rjmp	.+6      	; 0x4d4 <movecurse+0x2e>
 4ce:	20 e8       	ldi	r18, 0x80	; 128
 4d0:	01 c0       	rjmp	.+2      	; 0x4d4 <movecurse+0x2e>
 4d2:	20 e8       	ldi	r18, 0x80	; 128
	}
	else if (row==2)
	{
		data=0xc0+colum-1;
	}
	lcd_cmd(data);
 4d4:	82 2f       	mov	r24, r18
 4d6:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <lcd_cmd>
 4da:	8f ec       	ldi	r24, 0xCF	; 207
 4dc:	97 e0       	ldi	r25, 0x07	; 7
 4de:	01 97       	sbiw	r24, 0x01	; 1
 4e0:	f1 f7       	brne	.-4      	; 0x4de <movecurse+0x38>
 4e2:	00 c0       	rjmp	.+0      	; 0x4e4 <movecurse+0x3e>
 4e4:	00 00       	nop
 4e6:	08 95       	ret

000004e8 <lcd_char>:
	_delay_ms(1);
}
void lcd_char(char data)
{
 4e8:	cf 93       	push	r28
 4ea:	c8 2f       	mov	r28, r24
		PORTA=data;
		dio_writepin('B',1,1);
		enable();
		_delay_ms(1);
	#elif defined bitmode4
		write_high_nibble('A',data>>4);
 4ec:	68 2f       	mov	r22, r24
 4ee:	62 95       	swap	r22
 4f0:	6f 70       	andi	r22, 0x0F	; 15
 4f2:	81 e4       	ldi	r24, 0x41	; 65
 4f4:	0e 94 a3 01 	call	0x346	; 0x346 <write_high_nibble>
		dio_writepin('B',1,1);
 4f8:	41 e0       	ldi	r20, 0x01	; 1
 4fa:	61 e0       	ldi	r22, 0x01	; 1
 4fc:	82 e4       	ldi	r24, 0x42	; 66
 4fe:	0e 94 2a 01 	call	0x254	; 0x254 <dio_writepin>
		enable();
 502:	0e 94 c9 01 	call	0x392	; 0x392 <enable>
		write_high_nibble('A',data);
 506:	6c 2f       	mov	r22, r28
 508:	81 e4       	ldi	r24, 0x41	; 65
 50a:	0e 94 a3 01 	call	0x346	; 0x346 <write_high_nibble>
		dio_writepin('B',1,1);
 50e:	41 e0       	ldi	r20, 0x01	; 1
 510:	61 e0       	ldi	r22, 0x01	; 1
 512:	82 e4       	ldi	r24, 0x42	; 66
 514:	0e 94 2a 01 	call	0x254	; 0x254 <dio_writepin>
		enable();
 518:	0e 94 c9 01 	call	0x392	; 0x392 <enable>
 51c:	8f ec       	ldi	r24, 0xCF	; 207
 51e:	97 e0       	ldi	r25, 0x07	; 7
 520:	01 97       	sbiw	r24, 0x01	; 1
 522:	f1 f7       	brne	.-4      	; 0x520 <lcd_char+0x38>
 524:	00 c0       	rjmp	.+0      	; 0x526 <lcd_char+0x3e>
 526:	00 00       	nop
		_delay_ms(1);
	#endif
}
 528:	cf 91       	pop	r28
 52a:	08 95       	ret

0000052c <lcd_string>:
void lcd_string(char * data)
{
 52c:	cf 93       	push	r28
 52e:	df 93       	push	r29
 530:	ec 01       	movw	r28, r24
	
	while(*data != '\0')
 532:	03 c0       	rjmp	.+6      	; 0x53a <lcd_string+0xe>
	{
		lcd_char(*data);
 534:	0e 94 74 02 	call	0x4e8	; 0x4e8 <lcd_char>
		data++;
 538:	21 96       	adiw	r28, 0x01	; 1
	#endif
}
void lcd_string(char * data)
{
	
	while(*data != '\0')
 53a:	88 81       	ld	r24, Y
 53c:	81 11       	cpse	r24, r1
 53e:	fa cf       	rjmp	.-12     	; 0x534 <lcd_string+0x8>
	{
		lcd_char(*data);
		data++;
	}
}
 540:	df 91       	pop	r29
 542:	cf 91       	pop	r28
 544:	08 95       	ret

00000546 <main>:
#include "lcd.h"
#include "ADC.h"
#include "timer_0.h"
volatile unsigned short x;
int main(void)
{
 546:	cf 93       	push	r28
 548:	df 93       	push	r29
 54a:	cd b7       	in	r28, 0x3d	; 61
 54c:	de b7       	in	r29, 0x3e	; 62
 54e:	29 97       	sbiw	r28, 0x09	; 9
 550:	0f b6       	in	r0, 0x3f	; 63
 552:	f8 94       	cli
 554:	de bf       	out	0x3e, r29	; 62
 556:	0f be       	out	0x3f, r0	; 63
 558:	cd bf       	out	0x3d, r28	; 61
	DDRB=0XFF;
 55a:	8f ef       	ldi	r24, 0xFF	; 255
 55c:	87 bb       	out	0x17, r24	; 23
	ADC_vinit(0);
 55e:	80 e0       	ldi	r24, 0x00	; 0
 560:	0e 94 91 00 	call	0x122	; 0x122 <ADC_vinit>
	lcd_init();
 564:	0e 94 02 02 	call	0x404	; 0x404 <lcd_init>
	Timer0_Vinit(CTC_Mode , PRESCALAR_8 , Togle , 0);
 568:	20 e0       	ldi	r18, 0x00	; 0
 56a:	41 e0       	ldi	r20, 0x01	; 1
 56c:	62 e0       	ldi	r22, 0x02	; 2
 56e:	82 e0       	ldi	r24, 0x02	; 2
 570:	0e 94 14 03 	call	0x628	; 0x628 <Timer0_Vinit>
	char arr[4],brr[5];
	
    /* Replace with your application code */
    while (1) 
    {
		movecurse(1,1);
 574:	61 e0       	ldi	r22, 0x01	; 1
 576:	81 e0       	ldi	r24, 0x01	; 1
 578:	0e 94 53 02 	call	0x4a6	; 0x4a6 <movecurse>
		x=ADC_u16Read();
 57c:	0e 94 a5 00 	call	0x14a	; 0x14a <ADC_u16Read>
 580:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__data_end+0x1>
 584:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__data_end>
		OCR0=x/4;
 588:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__data_end>
 58c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__data_end+0x1>
 590:	96 95       	lsr	r25
 592:	87 95       	ror	r24
 594:	96 95       	lsr	r25
 596:	87 95       	ror	r24
 598:	8c bf       	out	0x3c, r24	; 60
		PORTC = OCR0;
 59a:	8c b7       	in	r24, 0x3c	; 60
 59c:	85 bb       	out	0x15, r24	; 21
		sprintf(arr,"%d",OCR0);
 59e:	8c b7       	in	r24, 0x3c	; 60
 5a0:	1f 92       	push	r1
 5a2:	8f 93       	push	r24
 5a4:	04 e7       	ldi	r16, 0x74	; 116
 5a6:	10 e0       	ldi	r17, 0x00	; 0
 5a8:	1f 93       	push	r17
 5aa:	0f 93       	push	r16
 5ac:	ce 01       	movw	r24, r28
 5ae:	01 96       	adiw	r24, 0x01	; 1
 5b0:	7c 01       	movw	r14, r24
 5b2:	9f 93       	push	r25
 5b4:	8f 93       	push	r24
 5b6:	0e 94 6f 03 	call	0x6de	; 0x6de <sprintf>
		sprintf(brr,"%d",x);
 5ba:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__data_end>
 5be:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__data_end+0x1>
 5c2:	9f 93       	push	r25
 5c4:	8f 93       	push	r24
 5c6:	1f 93       	push	r17
 5c8:	0f 93       	push	r16
 5ca:	8e 01       	movw	r16, r28
 5cc:	0b 5f       	subi	r16, 0xFB	; 251
 5ce:	1f 4f       	sbci	r17, 0xFF	; 255
 5d0:	1f 93       	push	r17
 5d2:	0f 93       	push	r16
 5d4:	0e 94 6f 03 	call	0x6de	; 0x6de <sprintf>
		lcd_string(arr);
 5d8:	c7 01       	movw	r24, r14
 5da:	0e 94 96 02 	call	0x52c	; 0x52c <lcd_string>
 5de:	9f ef       	ldi	r25, 0xFF	; 255
 5e0:	22 e5       	ldi	r18, 0x52	; 82
 5e2:	87 e0       	ldi	r24, 0x07	; 7
 5e4:	91 50       	subi	r25, 0x01	; 1
 5e6:	20 40       	sbci	r18, 0x00	; 0
 5e8:	80 40       	sbci	r24, 0x00	; 0
 5ea:	e1 f7       	brne	.-8      	; 0x5e4 <main+0x9e>
 5ec:	00 c0       	rjmp	.+0      	; 0x5ee <main+0xa8>
 5ee:	00 00       	nop
		_delay_ms(300);
		movecurse(2,1);
 5f0:	61 e0       	ldi	r22, 0x01	; 1
 5f2:	82 e0       	ldi	r24, 0x02	; 2
 5f4:	0e 94 53 02 	call	0x4a6	; 0x4a6 <movecurse>
 5f8:	8f e0       	ldi	r24, 0x0F	; 15
 5fa:	97 e2       	ldi	r25, 0x27	; 39
 5fc:	01 97       	sbiw	r24, 0x01	; 1
 5fe:	f1 f7       	brne	.-4      	; 0x5fc <main+0xb6>
 600:	00 c0       	rjmp	.+0      	; 0x602 <main+0xbc>
 602:	00 00       	nop
		_delay_ms(5);
		lcd_string(brr);
 604:	c8 01       	movw	r24, r16
 606:	0e 94 96 02 	call	0x52c	; 0x52c <lcd_string>
 60a:	9f ef       	ldi	r25, 0xFF	; 255
 60c:	22 e5       	ldi	r18, 0x52	; 82
 60e:	87 e0       	ldi	r24, 0x07	; 7
 610:	91 50       	subi	r25, 0x01	; 1
 612:	20 40       	sbci	r18, 0x00	; 0
 614:	80 40       	sbci	r24, 0x00	; 0
 616:	e1 f7       	brne	.-8      	; 0x610 <main+0xca>
 618:	00 c0       	rjmp	.+0      	; 0x61a <main+0xd4>
 61a:	00 00       	nop
 61c:	0f b6       	in	r0, 0x3f	; 63
 61e:	f8 94       	cli
 620:	de bf       	out	0x3e, r29	; 62
 622:	0f be       	out	0x3f, r0	; 63
 624:	cd bf       	out	0x3d, r28	; 61
 626:	a6 cf       	rjmp	.-180    	; 0x574 <main+0x2e>

00000628 <Timer0_Vinit>:
}

void Timer0_Vinit(TIMER0_MODES t_mode , TIMER0_PRESCALAR scale, OC_MODE mode ,uint8_t timer_data)
{
	//TIMER MODE
	if(t_mode == Normal_Mode)TCNT0 = timer_data;
 628:	81 11       	cpse	r24, r1
 62a:	02 c0       	rjmp	.+4      	; 0x630 <Timer0_Vinit+0x8>
 62c:	22 bf       	out	0x32, r18	; 50
 62e:	01 c0       	rjmp	.+2      	; 0x632 <Timer0_Vinit+0xa>
	else OCR0=timer_data;
 630:	2c bf       	out	0x3c, r18	; 60
		
	switch (t_mode)
 632:	81 30       	cpi	r24, 0x01	; 1
 634:	69 f0       	breq	.+26     	; 0x650 <Timer0_Vinit+0x28>
 636:	28 f0       	brcs	.+10     	; 0x642 <Timer0_Vinit+0x1a>
 638:	82 30       	cpi	r24, 0x02	; 2
 63a:	89 f0       	breq	.+34     	; 0x65e <Timer0_Vinit+0x36>
 63c:	83 30       	cpi	r24, 0x03	; 3
 63e:	b1 f0       	breq	.+44     	; 0x66c <Timer0_Vinit+0x44>
 640:	1e c0       	rjmp	.+60     	; 0x67e <Timer0_Vinit+0x56>
	{
		case Normal_Mode:
		CLR_BIT(TCCR0 , WGM00);
 642:	83 b7       	in	r24, 0x33	; 51
 644:	8f 7b       	andi	r24, 0xBF	; 191
 646:	83 bf       	out	0x33, r24	; 51
		CLR_BIT(TCCR0 , WGM01);
 648:	83 b7       	in	r24, 0x33	; 51
 64a:	87 7f       	andi	r24, 0xF7	; 247
 64c:	83 bf       	out	0x33, r24	; 51
		break;
 64e:	17 c0       	rjmp	.+46     	; 0x67e <Timer0_Vinit+0x56>
		
		case PWM:
		SET_BIT(TCCR0 , WGM00);
 650:	83 b7       	in	r24, 0x33	; 51
 652:	80 64       	ori	r24, 0x40	; 64
 654:	83 bf       	out	0x33, r24	; 51
		CLR_BIT(TCCR0 , WGM01);
 656:	83 b7       	in	r24, 0x33	; 51
 658:	87 7f       	andi	r24, 0xF7	; 247
 65a:	83 bf       	out	0x33, r24	; 51
		break;
 65c:	10 c0       	rjmp	.+32     	; 0x67e <Timer0_Vinit+0x56>
		
		case  CTC_Mode:
		CLR_BIT(TCCR0 , WGM00);
 65e:	83 b7       	in	r24, 0x33	; 51
 660:	8f 7b       	andi	r24, 0xBF	; 191
 662:	83 bf       	out	0x33, r24	; 51
		SET_BIT(TCCR0 , WGM01);
 664:	83 b7       	in	r24, 0x33	; 51
 666:	88 60       	ori	r24, 0x08	; 8
 668:	83 bf       	out	0x33, r24	; 51
		break;
 66a:	09 c0       	rjmp	.+18     	; 0x67e <Timer0_Vinit+0x56>
		
		case Fast_PWM:
		SET_BIT(TCCR0 , WGM00);
 66c:	83 b7       	in	r24, 0x33	; 51
 66e:	80 64       	ori	r24, 0x40	; 64
 670:	83 bf       	out	0x33, r24	; 51
		SET_BIT(TCCR0 , WGM01);
 672:	83 b7       	in	r24, 0x33	; 51
 674:	88 60       	ori	r24, 0x08	; 8
 676:	83 bf       	out	0x33, r24	; 51
		SET_BIT(DDRB,3);
 678:	87 b3       	in	r24, 0x17	; 23
 67a:	88 60       	ori	r24, 0x08	; 8
 67c:	87 bb       	out	0x17, r24	; 23
		break;
	}
	
	//OC-mode
	CLR_BIT(TCCR0,COM00);
 67e:	83 b7       	in	r24, 0x33	; 51
 680:	8f 7e       	andi	r24, 0xEF	; 239
 682:	83 bf       	out	0x33, r24	; 51
	CLR_BIT(TCCR0,COM01);
 684:	83 b7       	in	r24, 0x33	; 51
 686:	8f 7d       	andi	r24, 0xDF	; 223
 688:	83 bf       	out	0x33, r24	; 51
	TCCR0 |=(mode<<4);
 68a:	83 b7       	in	r24, 0x33	; 51
 68c:	90 e1       	ldi	r25, 0x10	; 16
 68e:	49 9f       	mul	r20, r25
 690:	a0 01       	movw	r20, r0
 692:	11 24       	eor	r1, r1
 694:	48 2b       	or	r20, r24
 696:	43 bf       	out	0x33, r20	; 51
	
	//PRESCALAR
	TCCR0 &= 0XF8;
 698:	83 b7       	in	r24, 0x33	; 51
 69a:	88 7f       	andi	r24, 0xF8	; 248
 69c:	83 bf       	out	0x33, r24	; 51
	TCCR0|= scale;
 69e:	83 b7       	in	r24, 0x33	; 51
 6a0:	68 2b       	or	r22, r24
 6a2:	63 bf       	out	0x33, r22	; 51
 6a4:	08 95       	ret

000006a6 <__tablejump2__>:
 6a6:	ee 0f       	add	r30, r30
 6a8:	ff 1f       	adc	r31, r31
 6aa:	05 90       	lpm	r0, Z+
 6ac:	f4 91       	lpm	r31, Z
 6ae:	e0 2d       	mov	r30, r0
 6b0:	09 94       	ijmp

000006b2 <printf>:
 6b2:	a0 e0       	ldi	r26, 0x00	; 0
 6b4:	b0 e0       	ldi	r27, 0x00	; 0
 6b6:	ef e5       	ldi	r30, 0x5F	; 95
 6b8:	f3 e0       	ldi	r31, 0x03	; 3
 6ba:	0c 94 32 06 	jmp	0xc64	; 0xc64 <__prologue_saves__+0x20>
 6be:	ae 01       	movw	r20, r28
 6c0:	4b 5f       	subi	r20, 0xFB	; 251
 6c2:	5f 4f       	sbci	r21, 0xFF	; 255
 6c4:	fa 01       	movw	r30, r20
 6c6:	61 91       	ld	r22, Z+
 6c8:	71 91       	ld	r23, Z+
 6ca:	af 01       	movw	r20, r30
 6cc:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__iob+0x2>
 6d0:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <__iob+0x3>
 6d4:	0e 94 91 03 	call	0x722	; 0x722 <vfprintf>
 6d8:	e2 e0       	ldi	r30, 0x02	; 2
 6da:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <__epilogue_restores__+0x20>

000006de <sprintf>:
 6de:	ae e0       	ldi	r26, 0x0E	; 14
 6e0:	b0 e0       	ldi	r27, 0x00	; 0
 6e2:	e5 e7       	ldi	r30, 0x75	; 117
 6e4:	f3 e0       	ldi	r31, 0x03	; 3
 6e6:	0c 94 30 06 	jmp	0xc60	; 0xc60 <__prologue_saves__+0x1c>
 6ea:	0d 89       	ldd	r16, Y+21	; 0x15
 6ec:	1e 89       	ldd	r17, Y+22	; 0x16
 6ee:	86 e0       	ldi	r24, 0x06	; 6
 6f0:	8c 83       	std	Y+4, r24	; 0x04
 6f2:	1a 83       	std	Y+2, r17	; 0x02
 6f4:	09 83       	std	Y+1, r16	; 0x01
 6f6:	8f ef       	ldi	r24, 0xFF	; 255
 6f8:	9f e7       	ldi	r25, 0x7F	; 127
 6fa:	9e 83       	std	Y+6, r25	; 0x06
 6fc:	8d 83       	std	Y+5, r24	; 0x05
 6fe:	ae 01       	movw	r20, r28
 700:	47 5e       	subi	r20, 0xE7	; 231
 702:	5f 4f       	sbci	r21, 0xFF	; 255
 704:	6f 89       	ldd	r22, Y+23	; 0x17
 706:	78 8d       	ldd	r23, Y+24	; 0x18
 708:	ce 01       	movw	r24, r28
 70a:	01 96       	adiw	r24, 0x01	; 1
 70c:	0e 94 91 03 	call	0x722	; 0x722 <vfprintf>
 710:	ef 81       	ldd	r30, Y+7	; 0x07
 712:	f8 85       	ldd	r31, Y+8	; 0x08
 714:	e0 0f       	add	r30, r16
 716:	f1 1f       	adc	r31, r17
 718:	10 82       	st	Z, r1
 71a:	2e 96       	adiw	r28, 0x0e	; 14
 71c:	e4 e0       	ldi	r30, 0x04	; 4
 71e:	0c 94 4c 06 	jmp	0xc98	; 0xc98 <__epilogue_restores__+0x1c>

00000722 <vfprintf>:
 722:	ab e0       	ldi	r26, 0x0B	; 11
 724:	b0 e0       	ldi	r27, 0x00	; 0
 726:	e7 e9       	ldi	r30, 0x97	; 151
 728:	f3 e0       	ldi	r31, 0x03	; 3
 72a:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__prologue_saves__>
 72e:	6c 01       	movw	r12, r24
 730:	7b 01       	movw	r14, r22
 732:	8a 01       	movw	r16, r20
 734:	fc 01       	movw	r30, r24
 736:	17 82       	std	Z+7, r1	; 0x07
 738:	16 82       	std	Z+6, r1	; 0x06
 73a:	83 81       	ldd	r24, Z+3	; 0x03
 73c:	81 ff       	sbrs	r24, 1
 73e:	cc c1       	rjmp	.+920    	; 0xad8 <vfprintf+0x3b6>
 740:	ce 01       	movw	r24, r28
 742:	01 96       	adiw	r24, 0x01	; 1
 744:	3c 01       	movw	r6, r24
 746:	f6 01       	movw	r30, r12
 748:	93 81       	ldd	r25, Z+3	; 0x03
 74a:	f7 01       	movw	r30, r14
 74c:	93 fd       	sbrc	r25, 3
 74e:	85 91       	lpm	r24, Z+
 750:	93 ff       	sbrs	r25, 3
 752:	81 91       	ld	r24, Z+
 754:	7f 01       	movw	r14, r30
 756:	88 23       	and	r24, r24
 758:	09 f4       	brne	.+2      	; 0x75c <vfprintf+0x3a>
 75a:	ba c1       	rjmp	.+884    	; 0xad0 <vfprintf+0x3ae>
 75c:	85 32       	cpi	r24, 0x25	; 37
 75e:	39 f4       	brne	.+14     	; 0x76e <vfprintf+0x4c>
 760:	93 fd       	sbrc	r25, 3
 762:	85 91       	lpm	r24, Z+
 764:	93 ff       	sbrs	r25, 3
 766:	81 91       	ld	r24, Z+
 768:	7f 01       	movw	r14, r30
 76a:	85 32       	cpi	r24, 0x25	; 37
 76c:	29 f4       	brne	.+10     	; 0x778 <vfprintf+0x56>
 76e:	b6 01       	movw	r22, r12
 770:	90 e0       	ldi	r25, 0x00	; 0
 772:	0e 94 88 05 	call	0xb10	; 0xb10 <fputc>
 776:	e7 cf       	rjmp	.-50     	; 0x746 <vfprintf+0x24>
 778:	91 2c       	mov	r9, r1
 77a:	21 2c       	mov	r2, r1
 77c:	31 2c       	mov	r3, r1
 77e:	ff e1       	ldi	r31, 0x1F	; 31
 780:	f3 15       	cp	r31, r3
 782:	d8 f0       	brcs	.+54     	; 0x7ba <vfprintf+0x98>
 784:	8b 32       	cpi	r24, 0x2B	; 43
 786:	79 f0       	breq	.+30     	; 0x7a6 <vfprintf+0x84>
 788:	38 f4       	brcc	.+14     	; 0x798 <vfprintf+0x76>
 78a:	80 32       	cpi	r24, 0x20	; 32
 78c:	79 f0       	breq	.+30     	; 0x7ac <vfprintf+0x8a>
 78e:	83 32       	cpi	r24, 0x23	; 35
 790:	a1 f4       	brne	.+40     	; 0x7ba <vfprintf+0x98>
 792:	23 2d       	mov	r18, r3
 794:	20 61       	ori	r18, 0x10	; 16
 796:	1d c0       	rjmp	.+58     	; 0x7d2 <vfprintf+0xb0>
 798:	8d 32       	cpi	r24, 0x2D	; 45
 79a:	61 f0       	breq	.+24     	; 0x7b4 <vfprintf+0x92>
 79c:	80 33       	cpi	r24, 0x30	; 48
 79e:	69 f4       	brne	.+26     	; 0x7ba <vfprintf+0x98>
 7a0:	23 2d       	mov	r18, r3
 7a2:	21 60       	ori	r18, 0x01	; 1
 7a4:	16 c0       	rjmp	.+44     	; 0x7d2 <vfprintf+0xb0>
 7a6:	83 2d       	mov	r24, r3
 7a8:	82 60       	ori	r24, 0x02	; 2
 7aa:	38 2e       	mov	r3, r24
 7ac:	e3 2d       	mov	r30, r3
 7ae:	e4 60       	ori	r30, 0x04	; 4
 7b0:	3e 2e       	mov	r3, r30
 7b2:	2a c0       	rjmp	.+84     	; 0x808 <vfprintf+0xe6>
 7b4:	f3 2d       	mov	r31, r3
 7b6:	f8 60       	ori	r31, 0x08	; 8
 7b8:	1d c0       	rjmp	.+58     	; 0x7f4 <vfprintf+0xd2>
 7ba:	37 fc       	sbrc	r3, 7
 7bc:	2d c0       	rjmp	.+90     	; 0x818 <vfprintf+0xf6>
 7be:	20 ed       	ldi	r18, 0xD0	; 208
 7c0:	28 0f       	add	r18, r24
 7c2:	2a 30       	cpi	r18, 0x0A	; 10
 7c4:	40 f0       	brcs	.+16     	; 0x7d6 <vfprintf+0xb4>
 7c6:	8e 32       	cpi	r24, 0x2E	; 46
 7c8:	b9 f4       	brne	.+46     	; 0x7f8 <vfprintf+0xd6>
 7ca:	36 fc       	sbrc	r3, 6
 7cc:	81 c1       	rjmp	.+770    	; 0xad0 <vfprintf+0x3ae>
 7ce:	23 2d       	mov	r18, r3
 7d0:	20 64       	ori	r18, 0x40	; 64
 7d2:	32 2e       	mov	r3, r18
 7d4:	19 c0       	rjmp	.+50     	; 0x808 <vfprintf+0xe6>
 7d6:	36 fe       	sbrs	r3, 6
 7d8:	06 c0       	rjmp	.+12     	; 0x7e6 <vfprintf+0xc4>
 7da:	8a e0       	ldi	r24, 0x0A	; 10
 7dc:	98 9e       	mul	r9, r24
 7de:	20 0d       	add	r18, r0
 7e0:	11 24       	eor	r1, r1
 7e2:	92 2e       	mov	r9, r18
 7e4:	11 c0       	rjmp	.+34     	; 0x808 <vfprintf+0xe6>
 7e6:	ea e0       	ldi	r30, 0x0A	; 10
 7e8:	2e 9e       	mul	r2, r30
 7ea:	20 0d       	add	r18, r0
 7ec:	11 24       	eor	r1, r1
 7ee:	22 2e       	mov	r2, r18
 7f0:	f3 2d       	mov	r31, r3
 7f2:	f0 62       	ori	r31, 0x20	; 32
 7f4:	3f 2e       	mov	r3, r31
 7f6:	08 c0       	rjmp	.+16     	; 0x808 <vfprintf+0xe6>
 7f8:	8c 36       	cpi	r24, 0x6C	; 108
 7fa:	21 f4       	brne	.+8      	; 0x804 <vfprintf+0xe2>
 7fc:	83 2d       	mov	r24, r3
 7fe:	80 68       	ori	r24, 0x80	; 128
 800:	38 2e       	mov	r3, r24
 802:	02 c0       	rjmp	.+4      	; 0x808 <vfprintf+0xe6>
 804:	88 36       	cpi	r24, 0x68	; 104
 806:	41 f4       	brne	.+16     	; 0x818 <vfprintf+0xf6>
 808:	f7 01       	movw	r30, r14
 80a:	93 fd       	sbrc	r25, 3
 80c:	85 91       	lpm	r24, Z+
 80e:	93 ff       	sbrs	r25, 3
 810:	81 91       	ld	r24, Z+
 812:	7f 01       	movw	r14, r30
 814:	81 11       	cpse	r24, r1
 816:	b3 cf       	rjmp	.-154    	; 0x77e <vfprintf+0x5c>
 818:	98 2f       	mov	r25, r24
 81a:	9f 7d       	andi	r25, 0xDF	; 223
 81c:	95 54       	subi	r25, 0x45	; 69
 81e:	93 30       	cpi	r25, 0x03	; 3
 820:	28 f4       	brcc	.+10     	; 0x82c <vfprintf+0x10a>
 822:	0c 5f       	subi	r16, 0xFC	; 252
 824:	1f 4f       	sbci	r17, 0xFF	; 255
 826:	9f e3       	ldi	r25, 0x3F	; 63
 828:	99 83       	std	Y+1, r25	; 0x01
 82a:	0d c0       	rjmp	.+26     	; 0x846 <vfprintf+0x124>
 82c:	83 36       	cpi	r24, 0x63	; 99
 82e:	31 f0       	breq	.+12     	; 0x83c <vfprintf+0x11a>
 830:	83 37       	cpi	r24, 0x73	; 115
 832:	71 f0       	breq	.+28     	; 0x850 <vfprintf+0x12e>
 834:	83 35       	cpi	r24, 0x53	; 83
 836:	09 f0       	breq	.+2      	; 0x83a <vfprintf+0x118>
 838:	59 c0       	rjmp	.+178    	; 0x8ec <vfprintf+0x1ca>
 83a:	21 c0       	rjmp	.+66     	; 0x87e <vfprintf+0x15c>
 83c:	f8 01       	movw	r30, r16
 83e:	80 81       	ld	r24, Z
 840:	89 83       	std	Y+1, r24	; 0x01
 842:	0e 5f       	subi	r16, 0xFE	; 254
 844:	1f 4f       	sbci	r17, 0xFF	; 255
 846:	88 24       	eor	r8, r8
 848:	83 94       	inc	r8
 84a:	91 2c       	mov	r9, r1
 84c:	53 01       	movw	r10, r6
 84e:	13 c0       	rjmp	.+38     	; 0x876 <vfprintf+0x154>
 850:	28 01       	movw	r4, r16
 852:	f2 e0       	ldi	r31, 0x02	; 2
 854:	4f 0e       	add	r4, r31
 856:	51 1c       	adc	r5, r1
 858:	f8 01       	movw	r30, r16
 85a:	a0 80       	ld	r10, Z
 85c:	b1 80       	ldd	r11, Z+1	; 0x01
 85e:	36 fe       	sbrs	r3, 6
 860:	03 c0       	rjmp	.+6      	; 0x868 <vfprintf+0x146>
 862:	69 2d       	mov	r22, r9
 864:	70 e0       	ldi	r23, 0x00	; 0
 866:	02 c0       	rjmp	.+4      	; 0x86c <vfprintf+0x14a>
 868:	6f ef       	ldi	r22, 0xFF	; 255
 86a:	7f ef       	ldi	r23, 0xFF	; 255
 86c:	c5 01       	movw	r24, r10
 86e:	0e 94 7d 05 	call	0xafa	; 0xafa <strnlen>
 872:	4c 01       	movw	r8, r24
 874:	82 01       	movw	r16, r4
 876:	f3 2d       	mov	r31, r3
 878:	ff 77       	andi	r31, 0x7F	; 127
 87a:	3f 2e       	mov	r3, r31
 87c:	16 c0       	rjmp	.+44     	; 0x8aa <vfprintf+0x188>
 87e:	28 01       	movw	r4, r16
 880:	22 e0       	ldi	r18, 0x02	; 2
 882:	42 0e       	add	r4, r18
 884:	51 1c       	adc	r5, r1
 886:	f8 01       	movw	r30, r16
 888:	a0 80       	ld	r10, Z
 88a:	b1 80       	ldd	r11, Z+1	; 0x01
 88c:	36 fe       	sbrs	r3, 6
 88e:	03 c0       	rjmp	.+6      	; 0x896 <vfprintf+0x174>
 890:	69 2d       	mov	r22, r9
 892:	70 e0       	ldi	r23, 0x00	; 0
 894:	02 c0       	rjmp	.+4      	; 0x89a <vfprintf+0x178>
 896:	6f ef       	ldi	r22, 0xFF	; 255
 898:	7f ef       	ldi	r23, 0xFF	; 255
 89a:	c5 01       	movw	r24, r10
 89c:	0e 94 72 05 	call	0xae4	; 0xae4 <strnlen_P>
 8a0:	4c 01       	movw	r8, r24
 8a2:	f3 2d       	mov	r31, r3
 8a4:	f0 68       	ori	r31, 0x80	; 128
 8a6:	3f 2e       	mov	r3, r31
 8a8:	82 01       	movw	r16, r4
 8aa:	33 fc       	sbrc	r3, 3
 8ac:	1b c0       	rjmp	.+54     	; 0x8e4 <vfprintf+0x1c2>
 8ae:	82 2d       	mov	r24, r2
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	88 16       	cp	r8, r24
 8b4:	99 06       	cpc	r9, r25
 8b6:	b0 f4       	brcc	.+44     	; 0x8e4 <vfprintf+0x1c2>
 8b8:	b6 01       	movw	r22, r12
 8ba:	80 e2       	ldi	r24, 0x20	; 32
 8bc:	90 e0       	ldi	r25, 0x00	; 0
 8be:	0e 94 88 05 	call	0xb10	; 0xb10 <fputc>
 8c2:	2a 94       	dec	r2
 8c4:	f4 cf       	rjmp	.-24     	; 0x8ae <vfprintf+0x18c>
 8c6:	f5 01       	movw	r30, r10
 8c8:	37 fc       	sbrc	r3, 7
 8ca:	85 91       	lpm	r24, Z+
 8cc:	37 fe       	sbrs	r3, 7
 8ce:	81 91       	ld	r24, Z+
 8d0:	5f 01       	movw	r10, r30
 8d2:	b6 01       	movw	r22, r12
 8d4:	90 e0       	ldi	r25, 0x00	; 0
 8d6:	0e 94 88 05 	call	0xb10	; 0xb10 <fputc>
 8da:	21 10       	cpse	r2, r1
 8dc:	2a 94       	dec	r2
 8de:	21 e0       	ldi	r18, 0x01	; 1
 8e0:	82 1a       	sub	r8, r18
 8e2:	91 08       	sbc	r9, r1
 8e4:	81 14       	cp	r8, r1
 8e6:	91 04       	cpc	r9, r1
 8e8:	71 f7       	brne	.-36     	; 0x8c6 <vfprintf+0x1a4>
 8ea:	e8 c0       	rjmp	.+464    	; 0xabc <vfprintf+0x39a>
 8ec:	84 36       	cpi	r24, 0x64	; 100
 8ee:	11 f0       	breq	.+4      	; 0x8f4 <vfprintf+0x1d2>
 8f0:	89 36       	cpi	r24, 0x69	; 105
 8f2:	41 f5       	brne	.+80     	; 0x944 <vfprintf+0x222>
 8f4:	f8 01       	movw	r30, r16
 8f6:	37 fe       	sbrs	r3, 7
 8f8:	07 c0       	rjmp	.+14     	; 0x908 <vfprintf+0x1e6>
 8fa:	60 81       	ld	r22, Z
 8fc:	71 81       	ldd	r23, Z+1	; 0x01
 8fe:	82 81       	ldd	r24, Z+2	; 0x02
 900:	93 81       	ldd	r25, Z+3	; 0x03
 902:	0c 5f       	subi	r16, 0xFC	; 252
 904:	1f 4f       	sbci	r17, 0xFF	; 255
 906:	08 c0       	rjmp	.+16     	; 0x918 <vfprintf+0x1f6>
 908:	60 81       	ld	r22, Z
 90a:	71 81       	ldd	r23, Z+1	; 0x01
 90c:	07 2e       	mov	r0, r23
 90e:	00 0c       	add	r0, r0
 910:	88 0b       	sbc	r24, r24
 912:	99 0b       	sbc	r25, r25
 914:	0e 5f       	subi	r16, 0xFE	; 254
 916:	1f 4f       	sbci	r17, 0xFF	; 255
 918:	f3 2d       	mov	r31, r3
 91a:	ff 76       	andi	r31, 0x6F	; 111
 91c:	3f 2e       	mov	r3, r31
 91e:	97 ff       	sbrs	r25, 7
 920:	09 c0       	rjmp	.+18     	; 0x934 <vfprintf+0x212>
 922:	90 95       	com	r25
 924:	80 95       	com	r24
 926:	70 95       	com	r23
 928:	61 95       	neg	r22
 92a:	7f 4f       	sbci	r23, 0xFF	; 255
 92c:	8f 4f       	sbci	r24, 0xFF	; 255
 92e:	9f 4f       	sbci	r25, 0xFF	; 255
 930:	f0 68       	ori	r31, 0x80	; 128
 932:	3f 2e       	mov	r3, r31
 934:	2a e0       	ldi	r18, 0x0A	; 10
 936:	30 e0       	ldi	r19, 0x00	; 0
 938:	a3 01       	movw	r20, r6
 93a:	0e 94 c4 05 	call	0xb88	; 0xb88 <__ultoa_invert>
 93e:	88 2e       	mov	r8, r24
 940:	86 18       	sub	r8, r6
 942:	45 c0       	rjmp	.+138    	; 0x9ce <vfprintf+0x2ac>
 944:	85 37       	cpi	r24, 0x75	; 117
 946:	31 f4       	brne	.+12     	; 0x954 <vfprintf+0x232>
 948:	23 2d       	mov	r18, r3
 94a:	2f 7e       	andi	r18, 0xEF	; 239
 94c:	b2 2e       	mov	r11, r18
 94e:	2a e0       	ldi	r18, 0x0A	; 10
 950:	30 e0       	ldi	r19, 0x00	; 0
 952:	25 c0       	rjmp	.+74     	; 0x99e <vfprintf+0x27c>
 954:	93 2d       	mov	r25, r3
 956:	99 7f       	andi	r25, 0xF9	; 249
 958:	b9 2e       	mov	r11, r25
 95a:	8f 36       	cpi	r24, 0x6F	; 111
 95c:	c1 f0       	breq	.+48     	; 0x98e <vfprintf+0x26c>
 95e:	18 f4       	brcc	.+6      	; 0x966 <vfprintf+0x244>
 960:	88 35       	cpi	r24, 0x58	; 88
 962:	79 f0       	breq	.+30     	; 0x982 <vfprintf+0x260>
 964:	b5 c0       	rjmp	.+362    	; 0xad0 <vfprintf+0x3ae>
 966:	80 37       	cpi	r24, 0x70	; 112
 968:	19 f0       	breq	.+6      	; 0x970 <vfprintf+0x24e>
 96a:	88 37       	cpi	r24, 0x78	; 120
 96c:	21 f0       	breq	.+8      	; 0x976 <vfprintf+0x254>
 96e:	b0 c0       	rjmp	.+352    	; 0xad0 <vfprintf+0x3ae>
 970:	e9 2f       	mov	r30, r25
 972:	e0 61       	ori	r30, 0x10	; 16
 974:	be 2e       	mov	r11, r30
 976:	b4 fe       	sbrs	r11, 4
 978:	0d c0       	rjmp	.+26     	; 0x994 <vfprintf+0x272>
 97a:	fb 2d       	mov	r31, r11
 97c:	f4 60       	ori	r31, 0x04	; 4
 97e:	bf 2e       	mov	r11, r31
 980:	09 c0       	rjmp	.+18     	; 0x994 <vfprintf+0x272>
 982:	34 fe       	sbrs	r3, 4
 984:	0a c0       	rjmp	.+20     	; 0x99a <vfprintf+0x278>
 986:	29 2f       	mov	r18, r25
 988:	26 60       	ori	r18, 0x06	; 6
 98a:	b2 2e       	mov	r11, r18
 98c:	06 c0       	rjmp	.+12     	; 0x99a <vfprintf+0x278>
 98e:	28 e0       	ldi	r18, 0x08	; 8
 990:	30 e0       	ldi	r19, 0x00	; 0
 992:	05 c0       	rjmp	.+10     	; 0x99e <vfprintf+0x27c>
 994:	20 e1       	ldi	r18, 0x10	; 16
 996:	30 e0       	ldi	r19, 0x00	; 0
 998:	02 c0       	rjmp	.+4      	; 0x99e <vfprintf+0x27c>
 99a:	20 e1       	ldi	r18, 0x10	; 16
 99c:	32 e0       	ldi	r19, 0x02	; 2
 99e:	f8 01       	movw	r30, r16
 9a0:	b7 fe       	sbrs	r11, 7
 9a2:	07 c0       	rjmp	.+14     	; 0x9b2 <vfprintf+0x290>
 9a4:	60 81       	ld	r22, Z
 9a6:	71 81       	ldd	r23, Z+1	; 0x01
 9a8:	82 81       	ldd	r24, Z+2	; 0x02
 9aa:	93 81       	ldd	r25, Z+3	; 0x03
 9ac:	0c 5f       	subi	r16, 0xFC	; 252
 9ae:	1f 4f       	sbci	r17, 0xFF	; 255
 9b0:	06 c0       	rjmp	.+12     	; 0x9be <vfprintf+0x29c>
 9b2:	60 81       	ld	r22, Z
 9b4:	71 81       	ldd	r23, Z+1	; 0x01
 9b6:	80 e0       	ldi	r24, 0x00	; 0
 9b8:	90 e0       	ldi	r25, 0x00	; 0
 9ba:	0e 5f       	subi	r16, 0xFE	; 254
 9bc:	1f 4f       	sbci	r17, 0xFF	; 255
 9be:	a3 01       	movw	r20, r6
 9c0:	0e 94 c4 05 	call	0xb88	; 0xb88 <__ultoa_invert>
 9c4:	88 2e       	mov	r8, r24
 9c6:	86 18       	sub	r8, r6
 9c8:	fb 2d       	mov	r31, r11
 9ca:	ff 77       	andi	r31, 0x7F	; 127
 9cc:	3f 2e       	mov	r3, r31
 9ce:	36 fe       	sbrs	r3, 6
 9d0:	0d c0       	rjmp	.+26     	; 0x9ec <vfprintf+0x2ca>
 9d2:	23 2d       	mov	r18, r3
 9d4:	2e 7f       	andi	r18, 0xFE	; 254
 9d6:	a2 2e       	mov	r10, r18
 9d8:	89 14       	cp	r8, r9
 9da:	58 f4       	brcc	.+22     	; 0x9f2 <vfprintf+0x2d0>
 9dc:	34 fe       	sbrs	r3, 4
 9de:	0b c0       	rjmp	.+22     	; 0x9f6 <vfprintf+0x2d4>
 9e0:	32 fc       	sbrc	r3, 2
 9e2:	09 c0       	rjmp	.+18     	; 0x9f6 <vfprintf+0x2d4>
 9e4:	83 2d       	mov	r24, r3
 9e6:	8e 7e       	andi	r24, 0xEE	; 238
 9e8:	a8 2e       	mov	r10, r24
 9ea:	05 c0       	rjmp	.+10     	; 0x9f6 <vfprintf+0x2d4>
 9ec:	b8 2c       	mov	r11, r8
 9ee:	a3 2c       	mov	r10, r3
 9f0:	03 c0       	rjmp	.+6      	; 0x9f8 <vfprintf+0x2d6>
 9f2:	b8 2c       	mov	r11, r8
 9f4:	01 c0       	rjmp	.+2      	; 0x9f8 <vfprintf+0x2d6>
 9f6:	b9 2c       	mov	r11, r9
 9f8:	a4 fe       	sbrs	r10, 4
 9fa:	0f c0       	rjmp	.+30     	; 0xa1a <vfprintf+0x2f8>
 9fc:	fe 01       	movw	r30, r28
 9fe:	e8 0d       	add	r30, r8
 a00:	f1 1d       	adc	r31, r1
 a02:	80 81       	ld	r24, Z
 a04:	80 33       	cpi	r24, 0x30	; 48
 a06:	21 f4       	brne	.+8      	; 0xa10 <vfprintf+0x2ee>
 a08:	9a 2d       	mov	r25, r10
 a0a:	99 7e       	andi	r25, 0xE9	; 233
 a0c:	a9 2e       	mov	r10, r25
 a0e:	09 c0       	rjmp	.+18     	; 0xa22 <vfprintf+0x300>
 a10:	a2 fe       	sbrs	r10, 2
 a12:	06 c0       	rjmp	.+12     	; 0xa20 <vfprintf+0x2fe>
 a14:	b3 94       	inc	r11
 a16:	b3 94       	inc	r11
 a18:	04 c0       	rjmp	.+8      	; 0xa22 <vfprintf+0x300>
 a1a:	8a 2d       	mov	r24, r10
 a1c:	86 78       	andi	r24, 0x86	; 134
 a1e:	09 f0       	breq	.+2      	; 0xa22 <vfprintf+0x300>
 a20:	b3 94       	inc	r11
 a22:	a3 fc       	sbrc	r10, 3
 a24:	11 c0       	rjmp	.+34     	; 0xa48 <vfprintf+0x326>
 a26:	a0 fe       	sbrs	r10, 0
 a28:	06 c0       	rjmp	.+12     	; 0xa36 <vfprintf+0x314>
 a2a:	b2 14       	cp	r11, r2
 a2c:	88 f4       	brcc	.+34     	; 0xa50 <vfprintf+0x32e>
 a2e:	28 0c       	add	r2, r8
 a30:	92 2c       	mov	r9, r2
 a32:	9b 18       	sub	r9, r11
 a34:	0e c0       	rjmp	.+28     	; 0xa52 <vfprintf+0x330>
 a36:	b2 14       	cp	r11, r2
 a38:	60 f4       	brcc	.+24     	; 0xa52 <vfprintf+0x330>
 a3a:	b6 01       	movw	r22, r12
 a3c:	80 e2       	ldi	r24, 0x20	; 32
 a3e:	90 e0       	ldi	r25, 0x00	; 0
 a40:	0e 94 88 05 	call	0xb10	; 0xb10 <fputc>
 a44:	b3 94       	inc	r11
 a46:	f7 cf       	rjmp	.-18     	; 0xa36 <vfprintf+0x314>
 a48:	b2 14       	cp	r11, r2
 a4a:	18 f4       	brcc	.+6      	; 0xa52 <vfprintf+0x330>
 a4c:	2b 18       	sub	r2, r11
 a4e:	02 c0       	rjmp	.+4      	; 0xa54 <vfprintf+0x332>
 a50:	98 2c       	mov	r9, r8
 a52:	21 2c       	mov	r2, r1
 a54:	a4 fe       	sbrs	r10, 4
 a56:	10 c0       	rjmp	.+32     	; 0xa78 <vfprintf+0x356>
 a58:	b6 01       	movw	r22, r12
 a5a:	80 e3       	ldi	r24, 0x30	; 48
 a5c:	90 e0       	ldi	r25, 0x00	; 0
 a5e:	0e 94 88 05 	call	0xb10	; 0xb10 <fputc>
 a62:	a2 fe       	sbrs	r10, 2
 a64:	17 c0       	rjmp	.+46     	; 0xa94 <vfprintf+0x372>
 a66:	a1 fc       	sbrc	r10, 1
 a68:	03 c0       	rjmp	.+6      	; 0xa70 <vfprintf+0x34e>
 a6a:	88 e7       	ldi	r24, 0x78	; 120
 a6c:	90 e0       	ldi	r25, 0x00	; 0
 a6e:	02 c0       	rjmp	.+4      	; 0xa74 <vfprintf+0x352>
 a70:	88 e5       	ldi	r24, 0x58	; 88
 a72:	90 e0       	ldi	r25, 0x00	; 0
 a74:	b6 01       	movw	r22, r12
 a76:	0c c0       	rjmp	.+24     	; 0xa90 <vfprintf+0x36e>
 a78:	8a 2d       	mov	r24, r10
 a7a:	86 78       	andi	r24, 0x86	; 134
 a7c:	59 f0       	breq	.+22     	; 0xa94 <vfprintf+0x372>
 a7e:	a1 fe       	sbrs	r10, 1
 a80:	02 c0       	rjmp	.+4      	; 0xa86 <vfprintf+0x364>
 a82:	8b e2       	ldi	r24, 0x2B	; 43
 a84:	01 c0       	rjmp	.+2      	; 0xa88 <vfprintf+0x366>
 a86:	80 e2       	ldi	r24, 0x20	; 32
 a88:	a7 fc       	sbrc	r10, 7
 a8a:	8d e2       	ldi	r24, 0x2D	; 45
 a8c:	b6 01       	movw	r22, r12
 a8e:	90 e0       	ldi	r25, 0x00	; 0
 a90:	0e 94 88 05 	call	0xb10	; 0xb10 <fputc>
 a94:	89 14       	cp	r8, r9
 a96:	38 f4       	brcc	.+14     	; 0xaa6 <vfprintf+0x384>
 a98:	b6 01       	movw	r22, r12
 a9a:	80 e3       	ldi	r24, 0x30	; 48
 a9c:	90 e0       	ldi	r25, 0x00	; 0
 a9e:	0e 94 88 05 	call	0xb10	; 0xb10 <fputc>
 aa2:	9a 94       	dec	r9
 aa4:	f7 cf       	rjmp	.-18     	; 0xa94 <vfprintf+0x372>
 aa6:	8a 94       	dec	r8
 aa8:	f3 01       	movw	r30, r6
 aaa:	e8 0d       	add	r30, r8
 aac:	f1 1d       	adc	r31, r1
 aae:	80 81       	ld	r24, Z
 ab0:	b6 01       	movw	r22, r12
 ab2:	90 e0       	ldi	r25, 0x00	; 0
 ab4:	0e 94 88 05 	call	0xb10	; 0xb10 <fputc>
 ab8:	81 10       	cpse	r8, r1
 aba:	f5 cf       	rjmp	.-22     	; 0xaa6 <vfprintf+0x384>
 abc:	22 20       	and	r2, r2
 abe:	09 f4       	brne	.+2      	; 0xac2 <vfprintf+0x3a0>
 ac0:	42 ce       	rjmp	.-892    	; 0x746 <vfprintf+0x24>
 ac2:	b6 01       	movw	r22, r12
 ac4:	80 e2       	ldi	r24, 0x20	; 32
 ac6:	90 e0       	ldi	r25, 0x00	; 0
 ac8:	0e 94 88 05 	call	0xb10	; 0xb10 <fputc>
 acc:	2a 94       	dec	r2
 ace:	f6 cf       	rjmp	.-20     	; 0xabc <vfprintf+0x39a>
 ad0:	f6 01       	movw	r30, r12
 ad2:	86 81       	ldd	r24, Z+6	; 0x06
 ad4:	97 81       	ldd	r25, Z+7	; 0x07
 ad6:	02 c0       	rjmp	.+4      	; 0xadc <vfprintf+0x3ba>
 ad8:	8f ef       	ldi	r24, 0xFF	; 255
 ada:	9f ef       	ldi	r25, 0xFF	; 255
 adc:	2b 96       	adiw	r28, 0x0b	; 11
 ade:	e2 e1       	ldi	r30, 0x12	; 18
 ae0:	0c 94 3e 06 	jmp	0xc7c	; 0xc7c <__epilogue_restores__>

00000ae4 <strnlen_P>:
 ae4:	fc 01       	movw	r30, r24
 ae6:	05 90       	lpm	r0, Z+
 ae8:	61 50       	subi	r22, 0x01	; 1
 aea:	70 40       	sbci	r23, 0x00	; 0
 aec:	01 10       	cpse	r0, r1
 aee:	d8 f7       	brcc	.-10     	; 0xae6 <strnlen_P+0x2>
 af0:	80 95       	com	r24
 af2:	90 95       	com	r25
 af4:	8e 0f       	add	r24, r30
 af6:	9f 1f       	adc	r25, r31
 af8:	08 95       	ret

00000afa <strnlen>:
 afa:	fc 01       	movw	r30, r24
 afc:	61 50       	subi	r22, 0x01	; 1
 afe:	70 40       	sbci	r23, 0x00	; 0
 b00:	01 90       	ld	r0, Z+
 b02:	01 10       	cpse	r0, r1
 b04:	d8 f7       	brcc	.-10     	; 0xafc <strnlen+0x2>
 b06:	80 95       	com	r24
 b08:	90 95       	com	r25
 b0a:	8e 0f       	add	r24, r30
 b0c:	9f 1f       	adc	r25, r31
 b0e:	08 95       	ret

00000b10 <fputc>:
 b10:	0f 93       	push	r16
 b12:	1f 93       	push	r17
 b14:	cf 93       	push	r28
 b16:	df 93       	push	r29
 b18:	fb 01       	movw	r30, r22
 b1a:	23 81       	ldd	r18, Z+3	; 0x03
 b1c:	21 fd       	sbrc	r18, 1
 b1e:	03 c0       	rjmp	.+6      	; 0xb26 <fputc+0x16>
 b20:	8f ef       	ldi	r24, 0xFF	; 255
 b22:	9f ef       	ldi	r25, 0xFF	; 255
 b24:	2c c0       	rjmp	.+88     	; 0xb7e <fputc+0x6e>
 b26:	22 ff       	sbrs	r18, 2
 b28:	16 c0       	rjmp	.+44     	; 0xb56 <fputc+0x46>
 b2a:	46 81       	ldd	r20, Z+6	; 0x06
 b2c:	57 81       	ldd	r21, Z+7	; 0x07
 b2e:	24 81       	ldd	r18, Z+4	; 0x04
 b30:	35 81       	ldd	r19, Z+5	; 0x05
 b32:	42 17       	cp	r20, r18
 b34:	53 07       	cpc	r21, r19
 b36:	44 f4       	brge	.+16     	; 0xb48 <fputc+0x38>
 b38:	a0 81       	ld	r26, Z
 b3a:	b1 81       	ldd	r27, Z+1	; 0x01
 b3c:	9d 01       	movw	r18, r26
 b3e:	2f 5f       	subi	r18, 0xFF	; 255
 b40:	3f 4f       	sbci	r19, 0xFF	; 255
 b42:	31 83       	std	Z+1, r19	; 0x01
 b44:	20 83       	st	Z, r18
 b46:	8c 93       	st	X, r24
 b48:	26 81       	ldd	r18, Z+6	; 0x06
 b4a:	37 81       	ldd	r19, Z+7	; 0x07
 b4c:	2f 5f       	subi	r18, 0xFF	; 255
 b4e:	3f 4f       	sbci	r19, 0xFF	; 255
 b50:	37 83       	std	Z+7, r19	; 0x07
 b52:	26 83       	std	Z+6, r18	; 0x06
 b54:	14 c0       	rjmp	.+40     	; 0xb7e <fputc+0x6e>
 b56:	8b 01       	movw	r16, r22
 b58:	ec 01       	movw	r28, r24
 b5a:	fb 01       	movw	r30, r22
 b5c:	00 84       	ldd	r0, Z+8	; 0x08
 b5e:	f1 85       	ldd	r31, Z+9	; 0x09
 b60:	e0 2d       	mov	r30, r0
 b62:	09 95       	icall
 b64:	89 2b       	or	r24, r25
 b66:	e1 f6       	brne	.-72     	; 0xb20 <fputc+0x10>
 b68:	d8 01       	movw	r26, r16
 b6a:	16 96       	adiw	r26, 0x06	; 6
 b6c:	8d 91       	ld	r24, X+
 b6e:	9c 91       	ld	r25, X
 b70:	17 97       	sbiw	r26, 0x07	; 7
 b72:	01 96       	adiw	r24, 0x01	; 1
 b74:	17 96       	adiw	r26, 0x07	; 7
 b76:	9c 93       	st	X, r25
 b78:	8e 93       	st	-X, r24
 b7a:	16 97       	sbiw	r26, 0x06	; 6
 b7c:	ce 01       	movw	r24, r28
 b7e:	df 91       	pop	r29
 b80:	cf 91       	pop	r28
 b82:	1f 91       	pop	r17
 b84:	0f 91       	pop	r16
 b86:	08 95       	ret

00000b88 <__ultoa_invert>:
 b88:	fa 01       	movw	r30, r20
 b8a:	aa 27       	eor	r26, r26
 b8c:	28 30       	cpi	r18, 0x08	; 8
 b8e:	51 f1       	breq	.+84     	; 0xbe4 <__ultoa_invert+0x5c>
 b90:	20 31       	cpi	r18, 0x10	; 16
 b92:	81 f1       	breq	.+96     	; 0xbf4 <__ultoa_invert+0x6c>
 b94:	e8 94       	clt
 b96:	6f 93       	push	r22
 b98:	6e 7f       	andi	r22, 0xFE	; 254
 b9a:	6e 5f       	subi	r22, 0xFE	; 254
 b9c:	7f 4f       	sbci	r23, 0xFF	; 255
 b9e:	8f 4f       	sbci	r24, 0xFF	; 255
 ba0:	9f 4f       	sbci	r25, 0xFF	; 255
 ba2:	af 4f       	sbci	r26, 0xFF	; 255
 ba4:	b1 e0       	ldi	r27, 0x01	; 1
 ba6:	3e d0       	rcall	.+124    	; 0xc24 <__ultoa_invert+0x9c>
 ba8:	b4 e0       	ldi	r27, 0x04	; 4
 baa:	3c d0       	rcall	.+120    	; 0xc24 <__ultoa_invert+0x9c>
 bac:	67 0f       	add	r22, r23
 bae:	78 1f       	adc	r23, r24
 bb0:	89 1f       	adc	r24, r25
 bb2:	9a 1f       	adc	r25, r26
 bb4:	a1 1d       	adc	r26, r1
 bb6:	68 0f       	add	r22, r24
 bb8:	79 1f       	adc	r23, r25
 bba:	8a 1f       	adc	r24, r26
 bbc:	91 1d       	adc	r25, r1
 bbe:	a1 1d       	adc	r26, r1
 bc0:	6a 0f       	add	r22, r26
 bc2:	71 1d       	adc	r23, r1
 bc4:	81 1d       	adc	r24, r1
 bc6:	91 1d       	adc	r25, r1
 bc8:	a1 1d       	adc	r26, r1
 bca:	20 d0       	rcall	.+64     	; 0xc0c <__ultoa_invert+0x84>
 bcc:	09 f4       	brne	.+2      	; 0xbd0 <__ultoa_invert+0x48>
 bce:	68 94       	set
 bd0:	3f 91       	pop	r19
 bd2:	2a e0       	ldi	r18, 0x0A	; 10
 bd4:	26 9f       	mul	r18, r22
 bd6:	11 24       	eor	r1, r1
 bd8:	30 19       	sub	r19, r0
 bda:	30 5d       	subi	r19, 0xD0	; 208
 bdc:	31 93       	st	Z+, r19
 bde:	de f6       	brtc	.-74     	; 0xb96 <__ultoa_invert+0xe>
 be0:	cf 01       	movw	r24, r30
 be2:	08 95       	ret
 be4:	46 2f       	mov	r20, r22
 be6:	47 70       	andi	r20, 0x07	; 7
 be8:	40 5d       	subi	r20, 0xD0	; 208
 bea:	41 93       	st	Z+, r20
 bec:	b3 e0       	ldi	r27, 0x03	; 3
 bee:	0f d0       	rcall	.+30     	; 0xc0e <__ultoa_invert+0x86>
 bf0:	c9 f7       	brne	.-14     	; 0xbe4 <__ultoa_invert+0x5c>
 bf2:	f6 cf       	rjmp	.-20     	; 0xbe0 <__ultoa_invert+0x58>
 bf4:	46 2f       	mov	r20, r22
 bf6:	4f 70       	andi	r20, 0x0F	; 15
 bf8:	40 5d       	subi	r20, 0xD0	; 208
 bfa:	4a 33       	cpi	r20, 0x3A	; 58
 bfc:	18 f0       	brcs	.+6      	; 0xc04 <__ultoa_invert+0x7c>
 bfe:	49 5d       	subi	r20, 0xD9	; 217
 c00:	31 fd       	sbrc	r19, 1
 c02:	40 52       	subi	r20, 0x20	; 32
 c04:	41 93       	st	Z+, r20
 c06:	02 d0       	rcall	.+4      	; 0xc0c <__ultoa_invert+0x84>
 c08:	a9 f7       	brne	.-22     	; 0xbf4 <__ultoa_invert+0x6c>
 c0a:	ea cf       	rjmp	.-44     	; 0xbe0 <__ultoa_invert+0x58>
 c0c:	b4 e0       	ldi	r27, 0x04	; 4
 c0e:	a6 95       	lsr	r26
 c10:	97 95       	ror	r25
 c12:	87 95       	ror	r24
 c14:	77 95       	ror	r23
 c16:	67 95       	ror	r22
 c18:	ba 95       	dec	r27
 c1a:	c9 f7       	brne	.-14     	; 0xc0e <__ultoa_invert+0x86>
 c1c:	00 97       	sbiw	r24, 0x00	; 0
 c1e:	61 05       	cpc	r22, r1
 c20:	71 05       	cpc	r23, r1
 c22:	08 95       	ret
 c24:	9b 01       	movw	r18, r22
 c26:	ac 01       	movw	r20, r24
 c28:	0a 2e       	mov	r0, r26
 c2a:	06 94       	lsr	r0
 c2c:	57 95       	ror	r21
 c2e:	47 95       	ror	r20
 c30:	37 95       	ror	r19
 c32:	27 95       	ror	r18
 c34:	ba 95       	dec	r27
 c36:	c9 f7       	brne	.-14     	; 0xc2a <__ultoa_invert+0xa2>
 c38:	62 0f       	add	r22, r18
 c3a:	73 1f       	adc	r23, r19
 c3c:	84 1f       	adc	r24, r20
 c3e:	95 1f       	adc	r25, r21
 c40:	a0 1d       	adc	r26, r0
 c42:	08 95       	ret

00000c44 <__prologue_saves__>:
 c44:	2f 92       	push	r2
 c46:	3f 92       	push	r3
 c48:	4f 92       	push	r4
 c4a:	5f 92       	push	r5
 c4c:	6f 92       	push	r6
 c4e:	7f 92       	push	r7
 c50:	8f 92       	push	r8
 c52:	9f 92       	push	r9
 c54:	af 92       	push	r10
 c56:	bf 92       	push	r11
 c58:	cf 92       	push	r12
 c5a:	df 92       	push	r13
 c5c:	ef 92       	push	r14
 c5e:	ff 92       	push	r15
 c60:	0f 93       	push	r16
 c62:	1f 93       	push	r17
 c64:	cf 93       	push	r28
 c66:	df 93       	push	r29
 c68:	cd b7       	in	r28, 0x3d	; 61
 c6a:	de b7       	in	r29, 0x3e	; 62
 c6c:	ca 1b       	sub	r28, r26
 c6e:	db 0b       	sbc	r29, r27
 c70:	0f b6       	in	r0, 0x3f	; 63
 c72:	f8 94       	cli
 c74:	de bf       	out	0x3e, r29	; 62
 c76:	0f be       	out	0x3f, r0	; 63
 c78:	cd bf       	out	0x3d, r28	; 61
 c7a:	09 94       	ijmp

00000c7c <__epilogue_restores__>:
 c7c:	2a 88       	ldd	r2, Y+18	; 0x12
 c7e:	39 88       	ldd	r3, Y+17	; 0x11
 c80:	48 88       	ldd	r4, Y+16	; 0x10
 c82:	5f 84       	ldd	r5, Y+15	; 0x0f
 c84:	6e 84       	ldd	r6, Y+14	; 0x0e
 c86:	7d 84       	ldd	r7, Y+13	; 0x0d
 c88:	8c 84       	ldd	r8, Y+12	; 0x0c
 c8a:	9b 84       	ldd	r9, Y+11	; 0x0b
 c8c:	aa 84       	ldd	r10, Y+10	; 0x0a
 c8e:	b9 84       	ldd	r11, Y+9	; 0x09
 c90:	c8 84       	ldd	r12, Y+8	; 0x08
 c92:	df 80       	ldd	r13, Y+7	; 0x07
 c94:	ee 80       	ldd	r14, Y+6	; 0x06
 c96:	fd 80       	ldd	r15, Y+5	; 0x05
 c98:	0c 81       	ldd	r16, Y+4	; 0x04
 c9a:	1b 81       	ldd	r17, Y+3	; 0x03
 c9c:	aa 81       	ldd	r26, Y+2	; 0x02
 c9e:	b9 81       	ldd	r27, Y+1	; 0x01
 ca0:	ce 0f       	add	r28, r30
 ca2:	d1 1d       	adc	r29, r1
 ca4:	0f b6       	in	r0, 0x3f	; 63
 ca6:	f8 94       	cli
 ca8:	de bf       	out	0x3e, r29	; 62
 caa:	0f be       	out	0x3f, r0	; 63
 cac:	cd bf       	out	0x3d, r28	; 61
 cae:	ed 01       	movw	r28, r26
 cb0:	08 95       	ret

00000cb2 <_exit>:
 cb2:	f8 94       	cli

00000cb4 <__stop_program>:
 cb4:	ff cf       	rjmp	.-2      	; 0xcb4 <__stop_program>
